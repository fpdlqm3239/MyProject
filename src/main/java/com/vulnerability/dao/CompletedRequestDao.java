package com.vulnerability.dao;

import java.util.Collections;
import java.util.List;
import java.util.Map;

import javax.sql.DataSource;

import org.springframework.jdbc.core.BeanPropertyRowMapper;
import org.springframework.jdbc.core.RowMapper;
import org.springframework.jdbc.core.namedparam.BeanPropertySqlParameterSource;
import org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate;
import org.springframework.jdbc.core.namedparam.SqlParameterSource;
import org.springframework.jdbc.core.simple.SimpleJdbcInsert;
import org.springframework.stereotype.Repository;

import com.vulnerability.dto.CompletedRequest;

@Repository
public class CompletedRequestDao {
	
	private NamedParameterJdbcTemplate jdbc;
	private SimpleJdbcInsert insert;
	private RowMapper<CompletedRequest> rowmapper;
	
	public CompletedRequestDao(DataSource dataSource) {
		this.jdbc = new NamedParameterJdbcTemplate(dataSource);
		this.insert = new SimpleJdbcInsert(dataSource).usingGeneratedKeyColumns("id").withTableName("completed_request");  
		this.rowmapper = new BeanPropertyRowMapper<CompletedRequest>(CompletedRequest.class);
	}
	
	public List<CompletedRequest> selectRequests() {
		List<CompletedRequest> list =this.jdbc.query(CompletedRequestSql.SELECT_COMPLETED_REQUEST, rowmapper );
		if(list.size() == 0) {
			return null;
		}
		return list;
	}
	
	public CompletedRequest selectRequestByRequestId(int requestId) {
		CompletedRequest completedRequest = new CompletedRequest();
		Map<String,Object> param = Collections.singletonMap("requestId", requestId);
		try {
			completedRequest = this.jdbc.queryForObject(CompletedRequestSql.SELECT_COMPLETED_REQUEST_BY_REQUESTID, param, rowmapper);
		}catch (Exception e) {
			return null;
		}
		return completedRequest;
	
	}
	
	public void insertCompletedRequest(CompletedRequest completedRequest) {
		SqlParameterSource params = new BeanPropertySqlParameterSource(completedRequest);
		insert.execute(params);
		
	}
}
