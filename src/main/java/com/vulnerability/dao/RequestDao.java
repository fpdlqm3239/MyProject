package com.vulnerability.dao;

import java.util.Collections;
import java.util.List;
import java.util.Map;

import javax.sql.DataSource;

import org.springframework.jdbc.core.BeanPropertyRowMapper;
import org.springframework.jdbc.core.RowMapper;
import org.springframework.jdbc.core.namedparam.BeanPropertySqlParameterSource;
import org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate;
import org.springframework.jdbc.core.namedparam.SqlParameterSource;
import org.springframework.jdbc.core.simple.SimpleJdbcInsert;
import org.springframework.stereotype.Repository;

import com.vulnerability.dto.Request;

@Repository
public class RequestDao {
	
	private NamedParameterJdbcTemplate jdbc;
	private SimpleJdbcInsert insert;
	private RowMapper<Request> rowmapper = BeanPropertyRowMapper.newInstance(Request.class);
	
	public RequestDao(DataSource dataSource) {
		this.jdbc = new NamedParameterJdbcTemplate(dataSource);
		this.insert = new SimpleJdbcInsert(dataSource).usingGeneratedKeyColumns("id").withTableName("request");
	}
	
	public List<Request> selectRequests(){
		List<Request> list = this.jdbc.query(RequestDaoSql.SELECT_ALL, rowmapper);
		if (list.size() ==0) return null;
		return list;	
	}
	
	public Request selectRequest(int userId) {
		Map<String,Object> param = Collections.singletonMap("userId", userId);
		Request request = null;
		
		request = this.jdbc.queryForObject(RequestDaoSql.SELECT_BY_USER_ID,param ,rowmapper);
		
		return request;
	}
	
	public int insertRequest(Request request) {
		SqlParameterSource params = new BeanPropertySqlParameterSource(request);
		int count = this.insert.execute(params);
		return count;
	}
	
	public void deleteRequest(int userId) {
		Map<String,Object> param = Collections.singletonMap("userId", userId);
		this.jdbc.update(RequestDaoSql.DELETE_BY_USER_ID, param);
	}
}
