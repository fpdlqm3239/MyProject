package com.vulnerability.controller;

import java.security.Principal;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.dao.DuplicateKeyException;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;

import com.vulnerability.dto.Request;
import com.vulnerability.dto.User;
import com.vulnerability.service.RequestService;
import com.vulnerability.service.UserService;

@Controller
@RequestMapping("/requests")
public class RequestController {
	
	@Autowired
	RequestService  requestService;
	
	@Autowired
	UserService userService;
	
	@RequestMapping("/request")
	public String request(Principal principal, ModelMap model) {
		User user =userService.getUserByLoginId(principal.getName());
		
		model.addAttribute("user", user);
		return "requests/requestpage";
	}
	
	@PostMapping("sendRequest")
	public String sendRequest(Principal principle, @RequestParam Map<String,Object> param, HttpServletRequest req,
								ModelMap model) {
		
		String ip = req.getRemoteAddr();
		
		String os = (String)param.get("os");
		String userAccount = (String)param.get("userAccount");
		String userPassword = (String)param.get("userPassword");
		String rootPassword = (String)param.get("rootPassword");
		
		
		
		User user = userService.getUserByLoginId(principle.getName());
		
		Request request = new Request();
		request.setUserId(user.getId());
		request.setName(user.getName());
		request.setLoginId(user.getLoginId());
		request.setPhone(user.getPhone());
		request.setOs(os);
		request.setIp(ip);
		request.setUserAccount(userAccount);
		request.setUserPassword(userPassword);
		request.setRootPassword(rootPassword);
		try {
			int count = requestService.addRequest(request);
			if(count == 0) {
			
				return "reqeusts/error";
			}
		}catch(DuplicateKeyException e) {
			return "requests/duplication";
		}
		
		
		return "requests/success";
	}
		
}
