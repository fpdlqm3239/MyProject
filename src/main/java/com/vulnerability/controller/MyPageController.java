package com.vulnerability.controller;

import java.security.Principal;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;

import com.vulnerability.dto.Detail;
import com.vulnerability.dto.Request;
import com.vulnerability.dto.Result;
import com.vulnerability.dto.User;
import com.vulnerability.service.DetailService;
import com.vulnerability.service.RequestService;
import com.vulnerability.service.ResultService;
import com.vulnerability.service.UserService;

import io.swagger.models.Model;

@Controller
@RequestMapping("/mypages")
public class MyPageController {
	
	@Autowired
	ResultService resultService;
	
	@Autowired
	DetailService detailService;
	
	@Autowired
	UserService userService;
	
	@Autowired
	RequestService requestservice;
	
	
	@GetMapping("/result")
	public String memberinfo(Principal principle , ModelMap modelMap) {
			
			Request request= null;
			String loginId;
			User user = null;
			List<Result> result=null;
			try {
				loginId = principle.getName();
				user = userService.getUserByLoginId(loginId);
			}catch (Exception e) {
				return "error/errorpage";
			}
			
			
			try {
				
				request = requestservice.getRequestByUserId(user.getId());
			}catch (Exception e) {
				System.out.println("진단요청이없음");
			}
		modelMap.addAttribute("request", request);	
		modelMap.addAttribute("result", result);
		modelMap.addAttribute("user", user);
		return "mypages/result";
	}
	
	@GetMapping("/detail")
	public String detail(@RequestParam(name = "id") int id, ModelMap model) {
		Result result = resultService.getResultById(id);
		List<Detail> account = detailService.getDetails(id, "계정 관리");
		List<Detail> file = detailService.getDetails(id,"파일 및 디렉토리 관리");
		
		
		model.addAttribute("result", result);
		model.addAttribute("fileList", file);
		model.addAttribute("accountList", account);
		
		return "mypages/detail";	
	}
	
	@GetMapping("/progressinfo")
	public String progressinfo(@RequestParam(name = "userId") int userId, ModelMap model) {
		Request request = requestservice.getRequestByUserId(userId);
		model.addAttribute("request", request);
		return "mypages/progressinfo";
	}
	
	
}
